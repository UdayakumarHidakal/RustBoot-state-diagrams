graph TD
A((Power On / <br> Board Reset)) -->|rustBoot Starts running| B(RustBoot Start)
style A fill:#f9f,stroke:#333, stroke-width:4px
B --> |opennig partitions|1[boot partition <br> Update partition]
1 --> 2{Check if <br>Boot Partition <br> is in BootInTestingStage<br> 0x10 }
2 --> |True i.e. the Updated partition <br> has not set the <br>Image state to success| D[Trigger the update <br> State the image state to <br>updating state <br> ]
D --> X[[Rollback to BootFirmware]]
2 --> |Flase| E{Check if <br>Update partition <br> is in <br> UpdateInUpdatingStage<br> 0x70}
E --> |True| F[Call RustBoot Update <br> Open all 3 partition]
F --> P{Verify the Integrity & <br> Authenticity of <br> Update Firmware}
P --> |True| S{Prevent Rollback <br> Check for the<br> firmware version <br> If <br>Updt FW Version < Boot FW}
P --> |False| K1(Panic!)
S --> |True| K4[Panic!]
S --> |False| O[Swap the <br>Update partition <br>with Boot partition <br> Set the Update image flag<br>to Testing state]
O --> W[[Jump to Updated Firmware <br> Validate the firmware's functionality <br>Set the Image flag to success state 0x00]]
E --> |False| G[Match boot partion type <br> 1. BootInNewState FF <br> 2. BootInSuccessState 00]
G --> |1| H{Verify the Interity and <br> Authenticity of the <br> Boot Firmware}
G --> |2  i.e. Allready <br> Updated firmware <br> is Present| I{Verify the Interity and <br> Authenticity of the <br> Boot Firmware}
H --> |True| j[[Jump to the BootFirmware]]
H --> |False| K2(Panic!)
I --> |True| L[[Jump to the Updated <br>firmware in <br>Boot Partition]]
I --> |False| K3(Panic!)
j --> M[[Trigger The update <br> Set the image state to <br> Updating 70]]
M --> z((Board Reset))
style z fill:#f9f,stroke:#333, stroke-width:4px
style K1 fill:#f16,stroke:#ff9f,stroke-width:2px,color:#fff,stroke-dasharray: 5 5
style K2 fill:#f16,stroke:#ff9f,stroke-width:2px,color:#fff,stroke-dasharray: 5 5
style K3 fill:#f16,stroke:#ff9f,stroke-width:2px,color:#fff,stroke-dasharray: 5 5
style K4 fill:#f16,stroke:#ff9f,stroke-width:2px,color:#fff,stroke-dasharray: 5 5



Plant uml code.


start
note right: Power ON / Board Reset

:Rust Boot Start; 

:Opens Partitions \n 1. Boot Partition\n 2. Update Partition; 

if (Check the trailer magic\n of Boot Partition\n If Boot partition is \n BootInTesting State 0x10) then (True i.e. Updated \nfirmware was not able\n to set the image state \n to success state 0x00)
  :Trigger the Updated\n set Image state to Updating state;
  #palegreen: Roll back to the Boot firmware;
  kill
else (False)
  if (Check if the Update partition \n is in UpdateInUpdatingStage\n0x70) then (True);
    :Call rust Boot Update \n Open all 3 partitions;
    if (Verify Integrty \nand authenticity \nof Firmware in \nUpdate partition) then (True)
      if (Prevent rollback \n if Update Firmware Version \n > \n Boot Firmware version) then (True)
        :Swap the Update \n partition with \n Boot partition\n set the update image\n flag to Testing state;
        #palegreen:Jump to the \n updated firmware\n validate the firmware functionality\n set the Image flag \n to success state 0x00;
        stop
      else
        #red:Panic!;
        kill
      endif
    else(False)
      #red:Panic!;
      kill
    endif
  else (False)
    switch(Match Boot Partition type \n 1. BootInNewState 0xFF\n 2. BootInSuccessState 0x00)
    case (1. Boot partition \n is in New state)
      if (Verify the Integrity \n and autenticity of \n Boot partition) then (True)
        #palegreen:Jump to the Next firmware\n Boot firmware;
        #palegreen:Trigger the updated \n Set the Update Image state \n to Updating state 0x70;
        end
        note right: Power ON / Board Reset
      else (False)
        #red:Panic!;
        kill
      endif
    case (2. Boot partition is \n in Success state)
      if (Verify the Integrity \n and autenticity of \n Boot partition) then (True)
        #palegreen:Jump to the \n Updated firmware\n in Boot partition;
        end
      else (False)
        #red:Panic!;
        kill

@enduml

if (Verify Integrty \nand authenticity \nof Firmware in \nUpdate partition) then (True)
      if (Prevent rollback \n if Update Firmware Version \n > Boot Firmware version) then (True)
        :Swap the Partition
      else(False)
        :#red Panic!
        kill
      endif
    else (False)
      :#red Panic!
      kill
    endif